<h1 class="mar-b-xs">Details</h1>
<h2 class="txt-gray-5 mar-t-none">Expandable container for progressive disclosure</h2>
<h2 id="demo">Demo</h2>
<code-sample>
<template>
  <details>
    <summary>Click to see details</summary>
    <p>The deets.</p>
  </details>
</template>
</code-sample>
<p>See more <a href="/examples#Details">examples</a></p>
<h2 id="api">API</h2>
<h3 id="tag">Tags</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Type</th>
    <th colspan="6">Content</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>details</code></td>
    <td colspan="2">Native element</td>
    <td colspan="6"><code>&lt;summary&gt;</code> as first child and any other content after that</td>
  </tr>
  <tr>
    <td colspan="2"><code>summary</code></td>
    <td colspan="2">Native element</td>
    <td colspan="6">Any, but should be a â€œsummary, caption, or legend for the rest of the contents"</td>
  </tr>
  </tbody>
</table>
<h3 id="attributes">Attributes</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Value</th>
    <th colspan="6">Description</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>open</code></td>
    <td colspan="2">Boolean attribute</td>
    <td colspan="6">When present, the details are shown (everything after summary). When removed details are hidden. If you want Details open by default, add this attribute.</td>
  </tr>
  </tbody>
</table>
<h3 id="events">Events</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Detail</th>
    <th colspan="6">Description</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>toggle</code></td>
    <td colspan="2">None</td>
    <td colspan="6">
      <p class="mar-t-none">Fires after Details was opened or closed. If <code>e.currentTarget.open</code> is true, then it was just opened, otherwise it was closed.</p>
    </td>
  </tr>
  </tbody>
</table>
<h2 id="guidelines">Guidelines</h2>
<!--<h3 id="title">What about &lt;details&gt;?</h3>-->
<!--<p>This element matches the <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLDetailsElement" target="_blank" rel="noopener"><code>HTMLDetailsElement</code></a> interface as close as possible so when browser support for <code>&lt;details&gt;</code> is sufficient it will be removed from M- in favor of the native element. Breaking changes should be limited to just the "m-" prefix.</p>-->
<h3 id="necessary">Is the content even necessary?</h3>
<p>Although Details and <a href="/accordion">Accordion</a> are great tools for progressive disclosure, you should consider if the hidden content is necessary or if it could just be removed altogether.</p>
<h3>Clickable elements inside summary</h3>
<p>Some designs will include a button or other interactive element in <code>&lt;summary&gt;</code> that should not toggle the details. Most elements behave as normal without toggling Details, but some, like in the example below, need an event handler to <code>preventDefault</code> to stop this from happening:</p>
<code-sample>
  <script>
    // Makes "Delete" and "Export" links not toggle Details
    const deleteHistory = e => e.preventDefault();
    const exportHistory = e => e.preventDefault();
  </script>

  <template>
    <details>
      <summary class="pad-all-md bg-offwhite">
        <div class="flex justify-content-between align-items-center">
          <span role="link"><m-icon name="clock"></m-icon> Show report history</span>
          <div>
            <span onclick="deleteHistory(event)" role="link" class="mar-l-md">Delete</span>
            <span onclick="exportHistory(event)" role="link" class="mar-l-md">Export</span>
          </div>
        </div>
      </summary>
      <div class="pad-all-md">The report history...</div>
    </details>
  </template>
</code-sample>
<h3>Navigation</h3>
<p>A common application of Details is an expandable navigation. Here's a working example:</p>
<code-sample>
  <nav aria-label="Sidebar navigation">
    <h4 class="txt-upper mar-b-xs">Lesson 1</h4>
    <details>
      <summary>Section A</summary>
      <div class="pad-l-xs mar-b-md">
        <a href="#" class="block mar-t-xs">Intro to Biology</a>
        <a href="#" class="block mar-t-xs">Living Organisms</a>
        <a href="#" class="block mar-t-xs">The Human Cell</a>
      </div>
    </details>
    <details class="mar-t-sm">
      <summary>Section B</summary>
      <div class="pad-l-xs mar-b-md">
        <a href="#" class="block mar-t-xs">DNA</a>
        <a href="#" class="block mar-t-xs">Mapping the Genome</a>
        <a href="#" class="block mar-t-xs">Biological Ethics</a>
      </div>
    </details>
    <h4 class="txt-upper mar-b-xs">Lesson 2</h4>
    <details class="mar-t-sm">
      <summary>Section C</summary>
      <div class="pad-l-xs mar-b-md">
        <a href="#" class="block mar-t-xs">Link</a>
        <a href="#" class="block mar-t-xs">Link</a>
        <a href="#" class="block mar-t-xs">Link</a>
      </div>
    </details>
  </nav>
</code-sample>
<h3 id="safari-bug">Safari flexbox bug</h3>
<p>Safari has a <a href="https://bugs.webkit.org/show_bug.cgi?id=190065" target="_blank">bug</a> that prevents <code>summary</code> from being styled as a flex container. It looks like a fix is coming. If your summary needs flexbox, add a div:</p>
<code-sample>
<template>
  <details>
    <summary>
      <div class="flex">This works</div>
    </summary>
    ...
  </details>
</template>
</code-sample>
<h3 id="a11y">Accessibility</h3>
<p>The <code>aria-expanded</code> attribute is managed automatically for you.</p>
