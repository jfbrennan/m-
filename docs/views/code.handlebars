<h1 class="mar-b-xs">Code</h1>
<h2 class="txt-gray-5 mar-t-0">For displaying text as code</h2>
<h2 id="demo">Demo</h2>
<code-sample>
  <div>Use the <code>code</code> element for inline code and the <code>pre</code> element for multiple lines of code:</div>
  <pre>const user = await fetch(url, init);
alert(user.name);</pre>
</code-sample>
<!--<p>See more <a href="/examples#Code">examples</a></p>-->
<h2 id="api">API</h2>
<h3 id="tag">Tags</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Type</th>
    <th colspan="6">Content</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>code</code></td>
    <td colspan="2">Native element</td>
    <td colspan="6">Text</td>
  </tr>
  <tr>
    <td colspan="2"><code>pre</code></td>
    <td colspan="2">Native element</td>
    <td colspan="6">Multi-line text</td>
  </tr>
  </tbody>
</table>
<h2 id="guidelines">Guidelines</h2>
<h3 id="xss">Security</h3>
<p>Because these elements' content is code, take extra care to ensure you're preventing cross-site scripting. There's nothing that makes these elements more or less secure than any other, but in this case you know for sure you're dumping code into the DOM, so be careful!</p>
<h3 id="a11y">Accessibility</h3>
<p>You should use <code>aria-label</code> and/or <code>aria-description</code> to explain the code. For example:</p>
<code-sample readonly="readonly">
  <code aria-description="JavaScript code that demonstrates the fetch API.">fetch(url, init)</code>
</code-sample>

