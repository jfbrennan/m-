<h1 class="mar-b-xs">Button</h1>
<h2 class="txt-gray-5 mar-t-0">For triggering actions</h2>
<h2>Demo</h2>
<code-sample>
  <p>Ordinal name</p>
  <button ord="primary">Primary</button>
  <button ord="secondary">Secondary</button>
  <button ord="tertiary">Tertiary</button>
  <p>Disabled state</p>
  <button ord="primary" disabled>Disabled</button>
  <p>Link as button</p>
  <a role="button" ord="primary" href="/button">Link</a>
  <p>Remove type</p>
  <button type="remove"></button>
  <p>Button group</p>
  <div role="group">
    <button ord="secondary" aria-pressed="true">One</button>
    <button ord="secondary">Two</button>
    <button ord="secondary">Three</button>
  </div>
</code-sample>
<h2>API</h2>
<h3>Tag</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Type</th>
    <th colspan="6">Content</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>button</code></td>
    <td colspan="2">Native element</td>
    <td colspan="6">Any content, but none for remove button</td>
  </tr>
  </tbody>
</table>
<h3 id="attributes">Attributes</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Value</th>
    <th colspan="6">Description</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>ord</code> <small class="fnt-bold fnt-italic">required*</small></td>
    <td colspan="2">
      <ul type="none">
        <li>primary</li>
        <li>secondary</li>
        <li>tertiary</li>
      </ul>
    </td>
    <td colspan="6">
      <a href="https://en.wikipedia.org/wiki/Ordinal_numeral" target="_blank" rel="noopener">Ordinal number word</a> for describing the button's precedence.
      <p class="mar-b-none"><small>*The remove button does not require this.</small></p>
    </td>
  </tr>
  <tr>
    <td colspan="2"><code>type</code></td>
    <td colspan="2">
      <ul type="none">
        <li>submit</li>
        <li>remove</li>
      </ul>
    </td>
    <td colspan="6">
      <p class="mar-t-0">Use submit when the button submits a form. Avoid <code>&lt;input type="submit"&gt;</code>. See
        <a href="/form#submit-button">Submit button</a> for more info</p>
      <p class="mar-b-none">Remove is a custom button type. It's used by other components like alert and dialog and is intended for remove/close use cases (e.g. remove item from cart, close the dialog).
        <a href="#remove">See below</a> for more info.</p>
    </td>
  </tr>
  <tr>
    <td colspan="2"><code>disabled</code></td>
    <td colspan="2">Boolean attribute</td>
    <td colspan="6">Disables the button. Link buttons also need <code>tabindex="-1"</code> to prevent activation by keyboard or assistive tech.</td>
  </tr>
  <tr>
    <td colspan="2"><code>aria-pressed</code></td>
    <td colspan="2">
      <ul>
        <li>true</li>
        <li>false</li>
        <li>mixed</li>
      </ul>
    </td>
    <td colspan="6">Defines the button (secondary only) as a <a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role#toggle_buttons" target="_blank">toggle
      button</a> and sets its pressed state. The <code>ariaPressed</code> property works as well. See <a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-pressed" target="_blank">MDN
      for details</a>.
    <p>See <a href="#button-group">Button Group</a> below to learn how to create a group of toggle buttons. It is recommended to use secondary buttons.</p></td>
  </tr>
<!--  <tr>-->
<!--    <td colspan="2"><code>scale</code></td>-->
<!--    <td colspan="2">-->
<!--      <ul type="none">-->
<!--        <li>sm</li>-->
<!--        <li>lg</li>-->
<!--      </ul>-->
<!--    </td>-->
<!--    <td colspan="6">Scales the button size. Medium is the implied default and matches the size of form controls. Small is recommended for menus, table rows, and other space-constrained designs.</td>-->
<!--  </tr>-->
  </tbody>
</table>
<p>For <span class="fnt-bold">&lt;a&gt;</span> only:</p>
<table layout="fixed">
  <tbody>
  <tr>
    <td colspan="2"><code>role</code> <small class="fnt-bold fnt-italic">required</small></td>
    <td colspan="2">button</td>
    <td colspan="6">Styles the link as a button. Use this instead of <code>&lt;button&gt;</code> when your use case needs a real link.</td>
  </tr>
  </tbody>
</table>
<h2>Guidelines</h2>
<h3>Button or link?</h3>
<p>If the action navigates to a new url, strive to use regular <a href="/link">links</a>, but if the link needs to look like a button then add the <code>role="button"</code> attribute. It's important that for these cases an actual link is used so the user can
  <kbd>cmd + click</kbd> or copy the link. If the action does not navigate the user to a new url, then use a regular button.</p>
<h3 id="remove">Custom <code>remove</code> type</h3>
<p>Like other buttons, it is your app not Mdash that handles the click. Dialog, alert, and other components use remove button to create a consistent experience. You should use it for similar use cases to meet user expectations:</p>
<div class="mar-b-md">
  <m-alert type="success">Alert uses remove button</m-alert>
</div>
<div class="mar-b-md">
  <m-tag>Tag supports remove button <button type="remove"></button></m-tag>
</div>
<div class="mar-b-md">
  <dialog>
    <button onclick="document.querySelector('dialog').close()" type="remove" slot="close"></button>
    Dialog defines a slot for its remove button.
  </dialog>
  <button onclick="document.querySelector('dialog').showModal()" ord="primary">Dialog uses remove button</button>
</div>
<div class="width-half">
  <p>Your app can use the remove button:</p>
  <div>
    <h4 class="mar-t-0 mar-b-xs">Order summary</h4>
    <div class="flex align-items-center justify-content-between">ðŸŒ® Taco w/ spicy pork <button type="remove" title="Remove item"></button></div>
    <div class="flex align-items-center justify-content-between">ðŸŒ¯ Burrito w/ steak, add guac <button type="remove" title="Remove item"></button></div>
    <div class="flex align-items-center justify-content-between">ðŸ¥¤ Horchata, large, x2 <button type="remove" title="Remove item"></button></div>
    <hr class="mar-t-xs mar-b-xs">
    <div class="flex justify-content-between">
      <span class="txt-sm txt-upper fnt-med">Total</span>
      <span class="txt-sm fnt-mono">$18.36</span>
    </div>
  </div>
</div>
<p>Changing the size of the icon can be done with a utility class:</p>
<code-sample>
<button type="remove" class="txt-xs"></button>
<button type="remove" class="txt-sm"></button>
<button type="remove" class="txt-md"></button>
<button type="remove" class="txt-lg"></button>
<button type="remove" class="txt-xl"></button>
</code-sample>
<h3 id="button-group">Button Group</h3>
<p>To create a button group, simply put toggle buttons in a container with <code>role="group"</code>. Your app manages the <code>aria-pressed</code> state and determines if one or more can be pressed at a time.</p>
<code-sample>
  <div role="group">
    <button ord="secondary" aria-pressed="true">One</button>
    <button ord="secondary" aria-pressed="mixed">Two</button>
    <button ord="secondary" aria-pressed="false">Three</button>
    <button ord="secondary">Four</button>
  </div>
</code-sample>
<p>Event delegation is useful for capturing all toggle button clicks and managing the pressed state. Also, optionally using the <code>value</code> or <code>data-*</code> attribute can help your app know what actions to take, e.g. setting a new filter and removing the others.</p>
<code-sample>
  <script>
    // Allow only one button pressed at a time
    const toggle = e => e.currentTarget.querySelectorAll('button').forEach(btn => (btn.ariaPressed = btn === e.target ? 'true' : 'false') && alert(`${btn.ariaPressed === 'true' ? 'Set' : 'Remove'} ${btn.value} filter`));
  </script>
  <div onclick="toggle(event)" role="group">
    <button ord="secondary" value="ready">Ready</button>
    <button ord="secondary" value="complete">Complete</button>
    <button ord="secondary" value="overdue">Overdue</button>
  </div>
</code-sample>
<h3 id="unstyled">Custom button styles</h3>
<p>Mdash leaves the plain button element untouched so you can freely use them without competing with Mdash styles (Mdash buttons require the <code>ord</code> attribute). Optionally add the <code>all-unset</code> utility class to remove user-agent styles from button, then customize as desired. For example:</p>
<code-sample>
  <button class="all-unset">No Styles</button>
  <button class="all-unset pad-xs bg-gray-7 txt-white txt-center txt-upper txt-space pointer" style="width: 200px">Custom styles</button>
</code-sample>
<h3>Accessibility</h3>
<p>The remove button should have an <code>aria-label</code> attribute and disabled link buttons should have <code>tabindex="-1"</code> to prevent activation.</p>
