<h1 class="mar-b-xs">Dialog</h1>
<h2 class="txt-gray-4 mar-t-none">Modal content container</h2>
<h2 id="demo">Demo</h2>
<code-sample>
<template>
  <dialog>
    <p>Put anything you want in here!</p>
    <p>Press <kbd>Esc</kbd> to close (or implement a <a href="#close-button">close button</a>)</p>
  </dialog>
</template>

<button onclick="document.querySelector('dialog').showModal()" ord="primary">Open Dialog</button>
</code-sample>
<h2 id="api">API</h2>
<h3 id="tag">Tag and slot</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Type</th>
    <th colspan="6">Content</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>dialog</code></td>
    <td colspan="2">Native element</td>
    <td colspan="6">Any content. The first element with <code>autofocus</code>, if any, will receive focus when the Dialog is opened.</td>
  </tr>
  <tr>
    <td colspan="2"><code>slot="close"</code></td>
    <td colspan="2">A <code>type="remove"</code> button</td>
    <td colspan="6">None. See <a href="#close-button">Close button</a> for details.</td>
  </tr>
  </tbody>
</table>
<h3 id="attributes">Attributes</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Value</th>
    <th colspan="6">Description</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>open</code></td>
    <td colspan="2">Boolean attribute</td>
    <td colspan="6">Will open the Dialog when added or close when removed. If you want the dialog displayed "modelessly", you have to call the <code>show</code> method.</td>
  </tr>
  </tbody>
</table>
<h3 id="events">Events</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Detail</th>
    <th colspan="6">Description</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>close</code></td>
    <td colspan="2">None</td>
    <td colspan="6">MDN says: "Fired when the dialog is closed, whether with the escape key, the <code>HTMLDialogElement.close()</code> method, or via submitting a form within the dialog with
      <code>method="dialog"</code>."</td>
  </tr>
  <tr>
    <td colspan="2"><code>cancel</code></td>
    <td colspan="2">None</td>
    <td colspan="6">MDN says: "Fired when the user dismisses the current open dialog with the escape key."</td>
  </tr>
  </tbody>
</table>
<h3 id="methods">Methods</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Signature</th>
    <th colspan="8">Description</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>close([returnValue])</code></td>
    <td colspan="8">MDN says: "Closes the dialog. An optional DOMString may be passed as an argument, updating the returnValue of the the dialog." Also note that the Dialog and its contents are still present in the DOM (e.g. forms still have user-entered values, so reset it if that's what your use case requires).</td>
  </tr>
  <tr>
    <td colspan="2"><code>show()</code></td>
    <td colspan="8">MDN says: "Displays the dialog modelessly, i.e. still allowing interaction with content outside of the dialog."</td>
  </tr>
  <tr>
    <td colspan="2"><code>showModal()</code></td>
    <td colspan="8">MDN says: "Displays the dialog as a modal, over the top of any other dialogs that might be present. Interaction outside the dialog is blocked."</td>
  </tr>
  </tbody>
</table>
<h2 id="guidelines">Guidelines</h2>
<h3 id="close-button">Close button</h3>
<p>Dialog elements do not come with a button to close themselves, so Mdash includes style-only support for one. Add <code>&lt;button slot="close" type="remove"&gt;</code> and Mdash will style it for you, but your application must implement the click handler (e.g. call <code>close()</code> or remove <code>open</code>). Note that this is required only if a dialog doesn't implement other UI for closing. Here's a basic example:</p>
<code-sample>
  <template>
    <dialog id="close-demo">
      <button onclick="document.querySelector('#close-demo').close()" slot="close" type="remove" aria-label="Closes dialog"></button>
      <p>The first remove button in a dialog is assumed to be its close button and styled and positioned for you.</p>
    </dialog>
  </template>

  <button onclick="document.querySelector('#close-demo').showModal()" ord="primary">Open Dialog</button>
</code-sample>
<h3 id="state">Forms and DOM state</h3>
<p>The state of the content is controlled by your application. Dialog does not change the state of its children other than moving them into a containing div on init. Forms and all other elements will initialize the way they are provided by the application and will continue to remain untouched even when the Dialog is closed. For example, if a Dialog is used to present a login form the application should remove the Dialog completely or reset the form after successful authentication. If left alone the Dialog and the login form inside it will contain the user's credentials. It's your content; you have to manage it.</p>
<h3 id="a11y">Accessibility</h3>
<p>The necessary ARIA attributes are added automatically; however, if your Dialog "contains an alert message" you should set <code>role="alertdialog"</code>.</p>
