<h1 class="mar-b-xs">Icons</h1>
<h2 class="txt-gray-5 mar-t-none">Symbols used to enhance communication</h2>
<h2 id="demo">Demo</h2>
<code-sample>
<m-icon name="person"></m-icon>
<m-icon name="person" fill></m-icon>
<m-icon name="flag"></m-icon>
<m-icon name="menu"></m-icon>
</code-sample>
<h2 id="api">API</h2>
<h3 id="tag">Tag</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Type</th>
    <th colspan="6">Content</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>m-icon</code></td>
    <td colspan="2">Custom tag</td>
    <td colspan="6">None</td>
  </tr>
  </tbody>
</table>
<h3 id="attributes">Attributes</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Value</th>
    <th colspan="6">Description</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>name</code> <small class="fnt-bold fnt-italic">required</small></td>
    <td colspan="2"><a href="#all-icons">See icon names below</a></td>
    <td colspan="6">Sets the icon's symbol</td>
  </tr>
  <tr>
    <td colspan="2"><code>fill</code></td>
    <td colspan="2">Boolean attribute</td>
    <td colspan="6">Uses filled version</td>
  </tr>
  </tbody>
</table>
<h2 id="guidelines">Guidelines</h2>
<h3 id="text">Pair with some text</h3>
<p>Icons should be used to <span class="fnt-italic">enhance</span> content not replace it. Users can misinterpret icons, so strive to accompany an icon with a label or other relevant content in close proximity.</p>
<code-sample>
  <m-menu>
    <span slot="trigger" role="link"><m-icon name="user"></m-icon> John Doe</span>
    <div slot="items">
      <a href="/profile">Profile</a>
      <a href="/settings">Settings</a>
      <hr class="mar-t-sm mar-b-sm">
      <a href="/logout">Log out</a>
    </div>
  </m-menu>
</code-sample>
<p>If an icon is on its own, use the <code>title</code> attribute to explain what it symbolizes (e.g. "Your current location") or its action (e.g. "Reload this page", like your browser's refresh icon). Hover over the user icon for a clue:</p>
<code-sample>
  <m-menu>
    <span slot="trigger" role="link"><m-icon name="user" title="Open user menu"></m-icon></span>
    <div slot="items">
      <a href="/profile">Profile</a>
      <a href="/settings">Settings</a>
      <hr class="mar-t-sm mar-b-sm">
      <a href="/logout">Log out</a>
    </div>
  </m-menu>
</code-sample>
<h3 id="svg">Why not SVG?</h3>
<p>Implementing SVG icons requires a relatively expensive abstraction and because there is no visual or accessibility difference between SVG and glyph icons, that abstraction would be all cost and no benefit. Mdash icons require no JavaScript and so they save kilobytes and have maximum compatibility. You can read more about the differences between SVG and glyphs
  <a href="https://dev.to/jfbrennan/svg-icons-are-not-settled-science-4hpo" target="_blank" rel="noopener">here</a>.</p>
<h3 id="a11y">Accessibility</h3>
<p>Because icons should be paired with some text (see above) they should reference that text with <a
        href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-labelledby_attribute"><code>aria-labelledby</code></a> attribute. In cases where there is no label, use
  <a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-label_attribute"><code>aria-label</code></a> and <code>title</code>.</p>
<h3 id="all-icons">Available icons</h3>
<fieldset>
  <input id="search-icons" type="text" placeholder="Search">
</fieldset>
<div id="icon-container"></div>
<script>
  const iconNames = ['home', 'menu', 'close', 'done'];
  updateIcons(iconNames);

  document.getElementById('search-icons').addEventListener('keyup', e => {
    const query = e.currentTarget.value;
    const results = query ? iconNames.filter(name => name.includes(query)) : iconNames;
    updateIcons(results)
  });

  function updateIcons(icons) {
    let iconHtml = '';
    icons.forEach(name => iconHtml += `<div class="mar-md txt-center left"><m-icon name="${name}"></m-icon><div>${name}</div></div>`);
    document.getElementById('icon-container').innerHTML = iconHtml;
  }
</script>
