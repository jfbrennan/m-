<h1 class="mar-b-xs">Tag</h1>
<h2 class="txt-gray-4 mar-t-none">Used for keywords, labeling, and filters</h2>
<h2 id="demo">Demo</h2>
<code-sample>
<m-tag>non-smoking</m-tag>
<m-tag>WiFi</m-tag>
<m-tag>pool</m-tag>
<m-tag><m-icon name="cup"></m-icon> free breakfast
</m-tag>
<m-tag>free breakfast<button type="remove"></button></m-tag>
</code-sample>
<h2 id="api">API</h2>
<h3 id="tag">Tag</h3>
<table layout="fixed">
  <thead>
  <tr>
    <th colspan="2">Name</th>
    <th colspan="2">Type</th>
    <th colspan="6">Content</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td colspan="2"><code>m-tag</code></td>
    <td colspan="2">Custom tag</td>
    <td colspan="6">Text, icon, or link and optional remove button for <a href="#removable">removable tags</a></td>
  </tr>
  </tbody>
</table>
<h2 id="guidelines">Guidelines</h2>
<h3 id="removable">Removable tags</h3>
<p>Simply include a <a href="/button#remove">remove</a> button and, using your preferred method, attach a click handler that removes the tag. Here's a basic example:</p>
<code-sample>
  <script>
    const removeTag = (e, id) => confirm(`Remove tag "${id}"?`) ? e.currentTarget.parentElement.remove() : null;
  </script>
  <template>
    <h4 class="mar-b-xs">Issue filters</h4>
    <m-tag>bug<button type="remove" onclick="removeTag(event, 'bug')"></button></m-tag>
    <m-tag>open<button type="remove" onclick="removeTag(event, 'open')"></button></m-tag>
    <m-tag>high-priority<button type="remove" onclick="removeTag(event, 'high_pri')"></button></m-tag>
  </template>
</code-sample>
<!--<p>It can be helpful to add an <code>id</code> or <code>data-*</code> attribute with some identifying data (id, name, index) to the tag to know which one was removed and update the backing data source, like an Array of users:</p>-->
<!--<code-sample readonly="readonly">-->
<!--  <template>-->
<!--    <m-tag data-user-id="{user.id}">{user.name}<button type="remove" onclick="removeUser"></button></m-tag>-->
<!--  </template>-->

<!--  <script>-->
<!--    removeUser(e) \{-->
<!--      const tag = e.currentTarget.parentElement;-->

<!--      // Remove user-->
<!--      this.users.splice(this.users.findIndex(u => u.id === tag.dataset.userId), 1);-->

<!--      // Remove tag (or it's removed automatically depending on your implementation)-->
<!--      tag.remove();-->
<!--    }-->
<!--  </script>-->
<!--</code-sample>-->
<h3 id="a11y">Accessibility</h3>
<p>Use <code>aria-label</code> and <code>title</code> when the Tag only contains an icon:</p>
<code-sample>
  <m-tag title="free breakfast" aria-label="free breakfast"><m-icon name="cup"></m-icon></m-tag>
</code-sample>
