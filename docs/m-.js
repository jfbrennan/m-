customElements.define("m-alert",class extends HTMLElement{#t=false;constructor(){super()}connectedCallback(){if(!this.#t){if(this.type==="warn"||this.type==="error")this.setAttribute("role","alert");if(this.getAttribute("dismissible")!=="false"){const t=document.createElement("button");t.setAttribute("type","remove");t.setAttribute("aria-label","Dismiss alert");t.addEventListener("click",(()=>this.dismiss()));this.append(t)}this.#t=true}}get type(){return this.getAttribute("type")}set type(t){this.setAttribute("type",t)}static get observedAttributes(){return["autodismiss"]}attributeChangedCallback(t,e,s){if(t==="autodismiss"){const t=s?parseInt(s)*1e3:4e3;setTimeout((()=>this.dismiss()),t)}}dismiss(){this.dispatchEvent(new CustomEvent("dismiss"));this.remove()}});class MdashAutocomplete extends HTMLElement{#t=false;#e;#s;#i;results=[];static sources={};constructor(){super();this.#e=this.close.bind(this)}connectedCallback(){if(!this.#t){this.#s=document.createElement("input");this.#s.setAttribute("placeholder",this.getAttribute("placeholder")||"");this.#s.addEventListener("select",(t=>t.stopPropagation()));this.#s.addEventListener("keyup",(t=>this.search(t.currentTarget.value)));this.#i=document.createElement("div");this.#i.classList.add("pos-absolute","bg-white","brd","brd-radius-sm");this.#i.addEventListener("click",(t=>{const e=t.target.closest("li");this.select(t,e.dataset.value,e.dataset.id)}));this.#i.hidden=true;this.append(this.#s,this.#i);this.#t=true}document.body.addEventListener("click",this.#e);document.addEventListener("keyup",this.#e)}disconnectedCallback(){document.body.removeEventListener("click",this.#e);document.removeEventListener("keyup",this.#e)}close(t){if(t.type==="keyup"&&t.key==="Escape"){this.clear()}else if(t.type==="click"&&!this.#i.contains(t.currentTarget)){this.clear(true)}}async search(t){if(t){const e=this.getAttribute("source");const s=Number(this.getAttribute("max"));let i=[];if(MdashAutocomplete.sources[e]){const n=await MdashAutocomplete.sources[e](t,s);if(n.query===this.#s.value){i=n.matches.slice(0,s||n.matches.length);if(typeof i[0]==="string"){i=i.map((t=>({value:t})))}}}else if(document.getElementById(e)){const s=t.toLowerCase();Array.from(document.getElementById(e).options).forEach((t=>{const e=t.value?.toLowerCase().includes(s)||t.textContent?.toLowerCase().includes(s);if(e){const e=t.value;const s=t.textContent||e;i.push({value:s,id:e})}}))}this.results=i;this.render(t)}else{this.clear()}}select(t,e,s){t.stopPropagation();const i=this.getAttribute("source");this.#s.value=e;this.#s.focus();this.dispatchEvent(new CustomEvent("select",{detail:{source:i,value:e,id:s}}));this.clear()}clear(t){this.results=[];this.render();if(!t){this.#s.focus()}}render(t){this.#i.hidden=!t;this.#i.innerHTML=this.results.length?`<ul type="none">\n          ${this.results.reduce(((t,e)=>t+=`<li class="pad-sm pointer" data-id="${e.id}" data-value="${e.value}">${e.value}</li>`),"")}\n        </ul>`:`<div class="pad-sm fnt-italic txt-gray-5">No results</div>`}}window.MdashAutocomplete=MdashAutocomplete;customElements.define("m-autocomplete",MdashAutocomplete);customElements.define("m-menu",class extends HTMLElement{#t=false;#e;constructor(){super();this.#e=this.close.bind(this)}connectedCallback(){if(!this.#t){this.querySelector('[slot="trigger"]')?.addEventListener("click",(t=>this.open=!this.open));this.#t=true}document.body.addEventListener("click",this.#e);window.addEventListener("popstate",this.#e)}disconnectedCallback(){document.body.removeEventListener("click",this.#e);window.removeEventListener("popstate",this.#e)}close(t){if(t&&t.type==="popstate"||!this.contains(t.target)){this.open=false}}static get observedAttributes(){return["open"]}attributeChangedCallback(t,e,s){if(t==="open")this.dispatchEvent(new CustomEvent("toggle"))}get open(){return this.hasAttribute("open")}set open(t){t?this.setAttribute("open",""):this.removeAttribute("open")}});customElements.define("m-vard",class extends HTMLElement{#t=false;#n;constructor(){super()}connectedCallback(){if(!this.#t){this.ariaRole="link";this.addEventListener("click",(t=>{const e=`BEGIN:VCARD\n        VERSION:4.0\n        FN:${this.contact.name}\n        TEL;TYPE=work,voice:${this.contact.phone}\n        EMAIL:${this.contact.email}\n        END:VCARD`;const s=document.createElement("a");const i=new Blob([e],{type:"text/vcard"});s.href=this.#n=URL.createObjectURL(i);s.download=`${this.contact.name}.vcf`;s.click()}));this.#t=true}}disconntectedCallback(){URL.revokeObjectURL(this.#n)}get contact(){return this.contact}set contact(t){this.contact=t}});